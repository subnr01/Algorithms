parallels@ubuntu:~$ ./download.sh 0xFE67CA73
-rw-rw-r-- 1 parallels parallels 2337 Feb  8 22:58 /tmp/pgp-0xFE67CA73.tmp.30703
Try:	pgp -ka /tmp/pgp-0xFE67CA73.tmp.30703
    	pgpgpg -ka /tmp/pgp-0xFE67CA73.tmp.30703
    	rm -f /tmp/pgp-0xFE67CA73.tmp.30703
parallels@ubuntu:~$ pgp -ka /tmp/pgp-0xFE67CA73.tmp.30703
gpg: key FE67CA73: public key "Adwiteeya Agrawal <adwiteea@andrew.cmu.edu>" imported
gpg: Total number processed: 1
gpg:               imported: 1  (RSA: 1)
parallels@ubuntu:~$ pgp -kvc 0xFE67CA73
pub   2048R/FE67CA73 2016-01-28 [expires: 2021-01-26]
      Key fingerprint = 32EB 122D B3CA 5FA4 04DD  12CB 74C1 BB21 FE67 CA73
uid                  Adwiteeya Agrawal <adwiteea@andrew.cmu.edu>
sub   2048R/F21CCC72 2016-01-28 [expires: 2021-01-26]


Once you have someone's public key, perhaps obtained from a keyserver or an FTP or Web site, 
you still don't know that the key is genuine: you have to trust the source.

You can then compare it with the fingerprint extracted from the purportedly-identical public key 
on your keyring with either PGP or GnuPG

If they match, and if you have reason to believe that the person who sent you the key was indeed the
key owner, then the public key has more trust that it had before.


parallels@ubuntu:~$ gpg --list-keys
/home/parallels/.gnupg/pubring.gpg
----------------------------------
pub   1024D/5072E1F5 2003-02-03 [expires: 2017-02-16]
uid                  MySQL Release Engineering <mysql-build@oss.oracle.com>

pub   2048R/FE67CA73 2016-01-28 [expires: 2021-01-26]
uid                  Adwiteeya Agrawal <adwiteea@andrew.cmu.edu>
sub   2048R/F21CCC72 2016-01-28 [expires: 2021-01-26]

pub   2048D/28F109AA 2016-02-09
uid                  Subramanian (Generating key) <snatara1@andrew.cmu.edu>
sub   2048g/B2E88B4B 2016-02-09


====================================================
if you use PGP/MIME and do encrypt, the *whole* message (including body and attachments) is encrypted. While it still is a valid PGP/MIME message if only some MIME parts are encrypted (see mailman processed posts), it doesn't make much sense to purposely create such emails, does it? I mean: either you want its content be protected or not. If you only want to encrypt the body but not the attachments or vice versa, you still can use INLINE PGP. 

parallels@ubuntu:~/Downloads/handin/evilize-0.2$ gpg --list-secret-keys
/home/parallels/.gnupg/secring.gpg
----------------------------------
sec   2048D/28F109AA 2016-02-09
uid                  Subramanian (Generating key) <snatara1@andrew.cmu.edu>
ssb   2048g/B2E88B4B 2016-02-09


Public key information:
pub   2048D/28F109AA 2016-02-09
      Key fingerprint = 6CAF 9423 00A6 7040 8462  C399 7961 6631 28F1 09AA
uid                  Subramanian (Generating key) <snatara1@andrew.cmu.edu>
sub   2048g/B2E88B4B 2016-02-09

gpg --keyserver pgp.mit.edu --send-keys D0FE7AFB
